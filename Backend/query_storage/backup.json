[
  {
    "id": 1733987777,
    "name": "Give me all the division",
    "query": "SELECT * FROM public.division",
    "use": "Static",
    "questions": [
      "Give me all the hq?",
      "Would you like to compare the overall billing for the same stockists for the same time period?"
    ]
  },
  {
    "id": 1733987776,
    "name": "Give me all the hq",
    "use": "Static",
    "query": "SELECT * FROM public.hq",
    "questions": ["Give me all the division", "Question 8?"]
  },
  {
    "id": 2,
    "name": "What is the % returns for brand Cheerio in Mumbai HQ in last 3 months?",
    "use": "Dynamic",
    "query": "SELECT st.name, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 9 AND s.primary_sales < 0 THEN s.primary_sales ELSE 0 END) AS Sept_Returns, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 10 AND s.primary_sales < 0 THEN s.primary_sales ELSE 0 END) AS Oct_Returns, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 11 AND s.primary_sales < 0 THEN s.primary_sales ELSE 0 END) AS Nov_Returns, SUM(CASE WHEN s.primary_sales < 0 THEN s.primary_sales ELSE 0 END) AS Total_Returns, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) IN (9, 10, 11) THEN s.primary_sales ELSE 0 END) AS Total_Sales, (SUM(CASE WHEN s.primary_sales < 0 THEN s.primary_sales ELSE 0 END) * 100.0) / NULLIF(SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) IN (9, 10, 11) THEN s.primary_sales ELSE 0 END), 0) AS Returns_Percentage FROM sales s JOIN stockist st ON s.stockistid = st.id JOIN sku sk ON s.skucode = sk.code WHERE sk.name = 'Ketorol Injection 1Ml' AND s.transaction_date >= '2024-09-01' AND s.transaction_date <= '2024-11-30' GROUP BY st.name HAVING SUM(CASE WHEN s.primary_sales < 0 THEN s.primary_sales ELSE 0 END) != 0 ORDER BY Total_Returns DESC LIMIT 3;",
    "questions": ["Give me all the division", "Question 8?"]
  },
  {
    "id": 3,
    "name": "What were my sales for November 2024?",
    "use": "Dynamic",
    "query": "SELECT hq.name AS hq_name, COALESCE(SUM(t.target_value), 0) AS nov_target_sales, COALESCE(SUM(s.primary_sales), 0) AS nov_actual_sales, CASE WHEN COALESCE(SUM(t.target_value), 0) > 0 THEN (COALESCE(SUM(s.primary_sales), 0) / COALESCE(SUM(t.target_value), 0)) * 100 ELSE 0 END AS nov_sales_achievement_percentage FROM sales s JOIN hq ON s.hqid = hq.id LEFT JOIN target t ON s.hqid = t.hqid AND DATE_PART('year', t.target_date) = 2024 AND DATE_PART('month', t.target_date) = 11 WHERE s.transaction_date BETWEEN '2024-11-01' AND '2024-11-30' GROUP BY hq.name ORDER BY hq.name;",
    "questions": [
      "Which brands should I focus on to complete my quarterly target?",
      "Give me all the division"
    ]
  },
  {
    "id": 3.1,
    "name": "Which brands should I focus on to complete my quarterly target?",
    "use": "Static",
    "query": "SELECT sku.name, SUM(CASE WHEN EXTRACT(MONTH FROM sales.transaction_date) IN (10, 11) THEN sales.primary_sales ELSE 0 END) AS total_sales_oct_nov, SUM(CASE WHEN EXTRACT(MONTH FROM sales.transaction_date) IN (10, 11) THEN target.target_value ELSE 0 END) AS total_target_oct_nov, ROUND((SUM(CASE WHEN EXTRACT(MONTH FROM sales.transaction_date) IN (10, 11) THEN sales.primary_sales ELSE 0 END) / NULLIF(SUM(CASE WHEN EXTRACT(MONTH FROM sales.transaction_date) IN (10, 11) THEN target.target_value ELSE 0 END), 0)) * 100, 2) AS achievement_percentage, SUM(CASE WHEN EXTRACT(MONTH FROM sales.transaction_date) IN (10, 11) THEN sales.primary_sales - target.target_value ELSE 0 END) AS deficit_or_surplus_oct_nov, target.target_value AS december_target FROM sales JOIN hq ON sales.hqid = hq.id JOIN target ON hq.id = target.hqid AND sales.skucode = target.skucode JOIN sku ON sales.skucode = sku.code WHERE EXTRACT(MONTH FROM sales.transaction_date) IN (10, 11) AND EXTRACT(MONTH FROM target.target_date) = 12 GROUP BY sku.name, target.target_value HAVING SUM(CASE WHEN EXTRACT(MONTH FROM sales.transaction_date) IN (10, 11) THEN sales.primary_sales - target.target_value ELSE 0 END) <> 0 ORDER BY deficit_or_surplus_oct_nov DESC;",
    "questions": ["Give me all the division", "Question 8?"]
  },
  {
    "id": 4,
    "name": "What are my critical HQs?",
    "use": "Dynamic",
    "query": "SELECT hq.name AS \"HQs\", ROUND((SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 9 THEN s.primary_sales ELSE 0 END) / MAX(CASE WHEN EXTRACT(MONTH FROM t.target_date) = 9 THEN t.target_value ELSE NULL END)) * 100, 2) AS \"Sep\", ROUND((SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 10 THEN s.primary_sales ELSE 0 END) / MAX(CASE WHEN EXTRACT(MONTH FROM t.target_date) = 10 THEN t.target_value ELSE NULL END)) * 100, 2) AS \"Oct\", ROUND((SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 11 THEN s.primary_sales ELSE 0 END) / MAX(CASE WHEN EXTRACT(MONTH FROM t.target_date) = 11 THEN t.target_value ELSE NULL END)) * 100, 2) AS \"Nov\", ROUND(((SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 9 THEN s.primary_sales ELSE 0 END) / MAX(CASE WHEN EXTRACT(MONTH FROM t.target_date) = 9 THEN t.target_value ELSE NULL END)) + (SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 10 THEN s.primary_sales ELSE 0 END) / MAX(CASE WHEN EXTRACT(MONTH FROM t.target_date) = 10 THEN t.target_value ELSE NULL END)) + (SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 11 THEN s.primary_sales ELSE 0 END) / MAX(CASE WHEN EXTRACT(MONTH FROM t.target_date) = 11 THEN t.target_value ELSE NULL END))) / 3, 2) AS \"Grand Total\" FROM sales s JOIN hq ON s.hqid = hq.id JOIN target t ON s.hqid = t.hqid AND EXTRACT(YEAR FROM s.transaction_date) = EXTRACT(YEAR FROM t.target_date) GROUP BY hq.name ORDER BY hq.name;",
    "questions": ["Give me all the division", "Question 8?"]
  },
  {
    "id": 9,
    "name": "Basis my past 3 months Mid-month Trend which stockists should I target and how much value?",
    "query": "SELECT hq.name AS \"HQ Name\", stockist.name AS \"Stockist Name\", SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 8 THEN sales.primary_sales ELSE 0 END) AS \"Mid month \u00e2\u20ac\u201cAug\u00e2\u20ac\u212224\", SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 9 THEN sales.primary_sales ELSE 0 END) AS \"Mid- month \u00e2\u20ac\u201cSep\u00e2\u20ac\u212224\", SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 10 THEN sales.primary_sales ELSE 0 END) AS \"Mid- month \u00e2\u20ac\u201cOct\u00e2\u20ac\u212224\", ROUND((SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 8 THEN sales.primary_sales ELSE 0 END) + SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 9 THEN sales.primary_sales ELSE 0 END) + SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 10 THEN sales.primary_sales ELSE 0 END)) / 3.0, 2) AS \"Average Last 3 months mid-month\", SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 11 THEN sales.primary_sales ELSE 0 END) AS \"Mid- month \u00e2\u20ac\u201cNov\u00e2\u20ac\u212224\", SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 11 THEN sales.primary_sales ELSE 0 END) - ROUND((SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 8 THEN sales.primary_sales ELSE 0 END) + SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 9 THEN sales.primary_sales ELSE 0 END) + SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 10 THEN sales.primary_sales ELSE 0 END)) / 3.0, 2) AS \"Difference\" FROM sales JOIN hq ON sales.hqid = hq.id JOIN stockist ON sales.stockistid = stockist.id WHERE DATE_PART('day', sales.transaction_date) <= 15 GROUP BY hq.name, stockist.name, stockist.id HAVING SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 11 THEN sales.primary_sales ELSE 0 END) < ROUND((SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 8 THEN sales.primary_sales ELSE 0 END) + SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 9 THEN sales.primary_sales ELSE 0 END) + SUM(CASE WHEN DATE_PART('month', sales.transaction_date) = 10 THEN sales.primary_sales ELSE 0 END)) / 3.0, 2) ORDER BY \"Difference\" ASC;",
    "use": "Static",
    "questions": [
      "Give me all the hq?",
      "Would you like to compare the overall billing for the same stockists for the same time period?"
    ]
  },
  {
    "id": 10.2,
    "name": "What is the MTD trend for stockists?",
    "query": "SELECT s.name, h.name, SUM(CASE WHEN sa.transaction_date BETWEEN DATE_TRUNC('month', CURRENT_DATE) AND CURRENT_DATE THEN sa.primary_sales ELSE 0 END) AS \"Current Month\", SUM(CASE WHEN sa.transaction_date BETWEEN DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') AND DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') + (CURRENT_DATE - DATE_TRUNC('day', CURRENT_DATE)) THEN sa.primary_sales ELSE 0 END) AS \"Last Month\", SUM(CASE WHEN sa.transaction_date BETWEEN DATE_TRUNC('month', CURRENT_DATE - INTERVAL '2 months') AND DATE_TRUNC('month', CURRENT_DATE - INTERVAL '2 months') + (CURRENT_DATE - DATE_TRUNC('day', CURRENT_DATE)) THEN sa.primary_sales ELSE 0 END) AS \"2 Months Ago\", SUM(CASE WHEN sa.transaction_date BETWEEN DATE_TRUNC('month', CURRENT_DATE - INTERVAL '3 months') AND DATE_TRUNC('month', CURRENT_DATE - INTERVAL '3 months') + (CURRENT_DATE - DATE_TRUNC('day', CURRENT_DATE)) THEN sa.primary_sales ELSE 0 END) AS \"3 Months Ago\", SUM(CASE WHEN sa.transaction_date BETWEEN DATE_TRUNC('month', CURRENT_DATE - INTERVAL '4 months') AND DATE_TRUNC('month', CURRENT_DATE - INTERVAL '4 months') + (CURRENT_DATE - DATE_TRUNC('day', CURRENT_DATE)) THEN sa.primary_sales ELSE 0 END) AS \"4 Months Ago\", SUM(CASE WHEN sa.transaction_date BETWEEN DATE_TRUNC('month', CURRENT_DATE - INTERVAL '5 months') AND DATE_TRUNC('month', CURRENT_DATE - INTERVAL '5 months') + (CURRENT_DATE - DATE_TRUNC('day', CURRENT_DATE)) THEN sa.primary_sales ELSE 0 END) AS \"5 Months Ago\", SUM(CASE WHEN sa.transaction_date BETWEEN DATE_TRUNC('month', CURRENT_DATE - INTERVAL '6 months') AND DATE_TRUNC('month', CURRENT_DATE - INTERVAL '6 months') + (CURRENT_DATE - DATE_TRUNC('day', CURRENT_DATE)) THEN sa.primary_sales ELSE 0 END) AS \"6 Months Ago\" FROM sales sa JOIN hq h ON sa.hqid = h.id JOIN stockist s ON sa.stockistid = s.id WHERE sa.transaction_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '6 months') GROUP BY s.name, h.name ORDER BY s.name, h.name Limit 5;",
    "use": "Static",
    "questions": [
      "Give me all the hq?",
      "Would you like to compare the overall billing for the same stockists for the same time period?"
    ]
  },
  {
    "id": 12,
    "name": "What is week on week primary billing pattern for AllAhabad HQ for last 6 months?",
    "query": "SELECT TO_CHAR(DATE_TRUNC('month', s.transaction_date), 'YYYY-MM') AS month, EXTRACT(WEEK FROM s.transaction_date) - EXTRACT(WEEK FROM DATE_TRUNC('month', s.transaction_date)) + 1 AS week_number, SUM(s.primary_sales) AS weekly_sales, total_monthly_sales FROM sales s INNER JOIN hq ON s.hqid = hq.id INNER JOIN stockist ON s.stockistid = stockist.id INNER JOIN (SELECT DATE_TRUNC('month', sales.transaction_date) AS month_start, SUM(sales.primary_sales) AS total_monthly_sales FROM sales INNER JOIN hq ON sales.hqid = hq.id INNER JOIN stockist ON sales.stockistid = stockist.id WHERE hq.name = 'TM HQ - Pune' AND sales.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '6 months' GROUP BY DATE_TRUNC('month', sales.transaction_date)) monthly_totals ON DATE_TRUNC('month', s.transaction_date) = monthly_totals.month_start WHERE hq.name = 'TM HQ - Pune' AND s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '6 months' GROUP BY month, week_number, total_monthly_sales ORDER BY month, week_number;",
    "use": "Dynamic",
    "questions": [
      "Give me all the hq?",
      "Would you like to compare the overall billing for the same stockists for the same time period?"
    ]
  },
  {
    "id": 13,
    "name": "Which account is giving me drop in MEDVOL Channel when compared to Last 3 month Avg ?",
    "query": "SELECT * FROM (SELECT hq.name AS hq_name, stockist.name AS stockist_name, SUM(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 month' AND s.transaction_date < DATE_TRUNC('month', CURRENT_DATE) THEN s.primary_sales ELSE 0 END) AS sales_last_month, SUM(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '2 months' AND s.transaction_date < DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 month' THEN s.primary_sales ELSE 0 END) AS sales_two_months_ago, SUM(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '3 months' AND s.transaction_date < DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '2 months' THEN s.primary_sales ELSE 0 END) AS sales_three_months_ago, AVG(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '3 months' AND s.transaction_date < DATE_TRUNC('month', CURRENT_DATE) THEN s.primary_sales ELSE NULL END) AS avg_sales_last_three_months, SUM(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) THEN s.primary_sales ELSE 0 END) AS current_month_sales, SUM(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) THEN s.primary_sales ELSE 0 END) - AVG(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '3 months' AND s.transaction_date < DATE_TRUNC('month', CURRENT_DATE) THEN s.primary_sales ELSE NULL END) AS sales_difference FROM sales s JOIN hq ON s.hqid = hq.id JOIN stockist ON s.stockistid = stockist.id WHERE s.status = 'MEDVOL' AND s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '3 months' GROUP BY hq.name, stockist.name HAVING SUM(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) THEN s.primary_sales ELSE 0 END) < AVG(CASE WHEN s.transaction_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '3 months' AND s.transaction_date < DATE_TRUNC('month', CURRENT_DATE) THEN s.primary_sales ELSE NULL END)) AS subquery ORDER BY sales_difference limit 5;",
    "use": "Static",
    "questions": [
      "Give me all the hq?",
      "Would you like to compare the overall billing for the same stockists for the same time period?"
    ]
  },
  {
    "id": 14.1,
    "name": "Billing for which A class stockist for Brand Ketorol Inj was lesser in November as compared to previous 3 months?",
    "query": "SELECT st.name AS Stockist_Name, h.name AS HQ_Name, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 8 AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE 0 END) AS primarysales_Aug_24, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 9 AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE 0 END) AS primarysales_Sep_24, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 10 AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE 0 END) AS primarysales_Oct_24, AVG(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) IN (8, 9, 10) AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE NULL END) AS primarysales_Avg_Last_3_Months, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 11 AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE 0 END) AS primarysales_Nov_24, SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 11 AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE 0 END) - AVG(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) IN (8, 9, 10) AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE NULL END) AS Difference_in_billing FROM sales s JOIN stockist st ON s.stockistid = st.id JOIN hq h ON s.hqid = h.id GROUP BY st.id, h.id HAVING SUM(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) = 11 AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE 0 END) < AVG(CASE WHEN EXTRACT(MONTH FROM s.transaction_date) IN (8, 9, 10) AND EXTRACT(YEAR FROM s.transaction_date) = 2024 THEN s.primary_sales ELSE NULL END) ORDER BY Difference_in_billing DESC;",
    "use": "Dynamic",
    "questions": [
      "Would you like to compare the overall billing for the same stockists for the same time period?",
      "Give me all the division"
    ]
  },
  {
    "id": 1736244628550,
    "name": "what is the total sales amount ?",
    "query": "SELECT SUM(primary_sales) AS total_sales_amount FROM sales;"
  }
]
